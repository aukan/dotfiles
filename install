#!/bin/bash

# Script that installs the dotfiles
#
# It creates symlinks to the files contained in
# the source directory and backups the previous files

# Utilities
function transform_path {
  sed "s/dotfiles\//$ESCAPED_HOME\/./"
}
function escape_slashes {
  sed 's/\//\\\//g'
}
function filter_unexistent {
  xargs -I{} bash -c '[[ -f {} ]] && echo {}'
}

# Initialize
BASE_DIR=$(pwd)
ESCAPED_BASE_DIR=$(echo $BASE_DIR | escape_slashes)
ESCAPED_HOME=$(echo $HOME | escape_slashes)
BACKUP_DIR=backups/$(date +%s)
ESCAPED_BACKUP_DIR=$(echo $BACKUP_DIR | escape_slashes)
cd $BASE_DIR

# Create backup directory
mkdir -p $BACKUP_DIR
find dotfiles/* -type d | sed "s/dotfiles\//$ESCAPED_BACKUP_DIR\//" | xargs mkdir -p

# Backup existent dotfiles
find dotfiles/* -type f | transform_path | filter_unexistent | sed "s/$ESCAPED_HOME\/./{$ESCAPED_HOME\/.,$ESCAPED_BACKUP_DIR\/}/" | xargs -I{} bash -c 'cp {}'

# Clean directories
find dotfiles/* -maxdepth 0 -type d | transform_path | xargs -I{} bash -c '[[ -d {} ]] && echo {}' | xargs --no-run-if-empty rm -r

# Symlink files
find dotfiles/* -maxdepth 0 | sed "s/dotfiles\//{$ESCAPED_BASE_DIR\/dotfiles\/,$ESCAPED_HOME\/.}/" | xargs -I{} bash -c 'ln -fs {}'
